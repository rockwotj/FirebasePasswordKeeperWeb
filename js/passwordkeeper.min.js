/*! passwordkeeper 2015-07-02 */
!function(a){a.module("PasswordKeeper",["ngMaterial","firebase","ngMessages","ngRoute","PasswordKeeper.accounts","PasswordKeeper.passwords"]).run(["$rootScope","$location",function(a,b){a.$on("$routeChangeError",function(a,c,d,e){"AUTH_REQUIRED"===e&&b.path("/login")})}]).config(["$routeProvider",function(a){var b=new Firebase("https://passwordkeeper.firebaseio.com");a.when("/login",{controller:"LoginCtrl as ctrl",templateUrl:"partials/login.html",resolve:{auth:["$firebaseAuth",function(a){var c=a(b);return c}]}}).when("/signup",{controller:"LoginCtrl as ctrl",templateUrl:"partials/signup.html",resolve:{auth:["$firebaseAuth",function(a){var c=a(b);return c}]}}).when("/account",{controller:"AccountCtrl as ctrl",templateUrl:"partials/account.html",resolve:{currentAuth:["$firebaseAuth",function(a){var c=a(b);return c.$requireAuth()}],auth:["$firebaseAuth",function(a){var c=a(b);return c}]}}).when("/passwords",{controller:"PasswordCtrl as ctrl",templateUrl:"partials/passwords.html",resolve:{currentAuth:["$firebaseAuth",function(a){var c=a(b);return c.$requireAuth()}]}}).otherwise("/passwords")}]).controller("SidebarCtrl",["$mdSidenav","$location","$rootScope",function(a,b,c){function d(a,c){"/login"===b.path()||"/signup"===b.path()?e.hideSidebar=!0:e.hideSidebar=!1}this.hideSidebar=!1,this.toggleSidenav=function(c){("/login"!==b.path()||"/signup"!==b.path())&&a(c).toggle()};var e=this;c.$on("$routeChangeSuccess",d),c.$on("$routeChangeError",d)}])}(angular),function(a){a.module("PasswordKeeper.accounts",[]).controller("LoginCtrl",["auth","$mdToast","$location","$timeout",function(a,b,c,d){var e=0;a.$getAuth()&&a.$unauth(),this.user={email:"",password:""},this.loggingIn=!1;var f=this,g=function(a){var c=b.simple().content(a).position("bottom left");return b.show(c)},h=function(c){var d=b.simple().content("Did you forget your password for "+f.user.email+"?").action("Reset").highlightAction(!1).position("bottom left");g(c)["finally"](function(){b.show(d).then(function(){a.$resetPassword(f.user).then(function(){g("Password reset email sent to "+f.user.email+"!")})["catch"](function(a){g(a.message)})})})};this.login=function(){this.loggingIn=!0,a.$authWithPassword(this.user).then(function(a){f.loggingIn=!1,c.path("/passwords")})["catch"](function(a){f.loggingIn=!1,e++,e>1?h(a.message):g(a.message)})},this.signup=function(){this.loggingIn=!0,a.$createUser(this.user).then(function(a){this.login(),g("Welcome to Password Keeper!")})["catch"](function(a){f.signingUp=!1,g(a.message)})}}]).controller("AccountCtrl",["currentAuth","auth","$mdToast","$location",function(a,b,c,d){var e=function(a){var b=c.simple().content(a).position("bottom left");return c.show(b)},f=function(a){e(a.message)},g=this;this.changeEmail={newEmail:"",oldEmail:"",password:""},this.changeEmailAction=function(){b.$changeEmail(g.changeEmail).then(function(){e("Email updated to "+g.changeEmail.newEmail+"!")})["catch"](f)},this.changePassword={email:"",oldPassword:"",newPassword:""},this.changePasswordAction=function(){b.$changePassword(g.changePassword).then(function(){e("Password changed for user "+g.changePassword.email+"!")})["catch"](f)},this.deleteAccount={email:"",password:""},this.deleteAccountAction=function(){b.$removeUser(g.deleteAccount).then(function(){e("Account for "+g.deleteAccount.email+" deleted!"),d.path("/login")})["catch"](f)}}])}(angular),function(a){"use strict";a.module("PasswordKeeper.passwords",[]).controller("PasswordCtrl",["$firebaseArray","$mdDialog","currentAuth",function(b,c,d){var e=new Firebase("https://passwordkeeper.firebaseio.com/users/"+d.uid);this.passwords=b(e);var f=["cyan","green","orange","pink","purple","red"],g={};this.getRandomLockColor=function(a){if(void 0!==g["lockAt"+a])return g["lockAt"+a];var b=f[Math.floor(Math.random()*f.length)];return g["lockAt"+a]=b,b};var h=this,i=function(b){return["$mdDialog",function(c){this.isNewQuote=!b,this.newPassword={},this.isNewQuote||(this.newPassword=b,this.originalPassword=a.copy(b)),this.cancel=function(){this.isNewQuote||(this.newPassword.service=this.originalPassword.service,this.newPassword.username=this.originalPassword.username,this.newPassword.password=this.originalPassword.password),c.cancel()},this.ok=function(){""===this.newPassword.username&&(this.newPassword.username=null),this.isNewQuote?h.passwords.$add(this.newPassword):h.passwords.$save(this.newPassword),c.hide()}}]};this.createNewPassword=function(a){c.show({templateUrl:"/partials/insertDialog.html",targetEvent:a,controller:i(),controllerAs:"dialog"})},this.updatePassword=function(a,b){c.show({templateUrl:"/partials/insertDialog.html",targetEvent:a,controller:i(b),controllerAs:"dialog"})},this.deletePassword=function(a,b){var d=c.confirm().title("Delete Password").content("Would you like to delete your password for "+b.service+"?").ariaLabel("Delete Password").ok("Remove").cancel("Cancel").targetEvent(a);c.show(d).then(function(){h.passwords.$remove(b)})}}])}(angular);